) +
labs(
title = "Ratio of Black People in Each County Jail",
x = "Latitude",
y = "Longitude"
)
memory.limit(size = 20000)
library(tidyr)
library(knitr)
source("analysis.R")
memory.limit(size = 20000)
library(tidyr)
library(knitr)
source("analysis.R")
---
title: "Assignment 3 - Incarceration"
author: "Cody Tu"
date: "11/12/2021"
output: html_document
---
```{r setup, include=FALSE}
memory.limit(size = 20000)
library(tidyr)
library(knitr)
source("analysis.R")
```
# Introduction
Racism and racial injustices have been fairly popular and debated topic in social and political structures of the federal government. This is most apparent in the United States' prison system where a disproportionate racial incarceration is very visible. Therefore, in the data given by Vera Institute regarding incarceration trends, there will be a focus on 5 variable to expose the patterns of inequality.
1. One variable to focus on in the data set is `county_name` which returns the location of imprisonment.
2. The second variable to focus on is the `total_jail_pop` which is the estimate average number of people held in jail for a whole year.
3. The third variable is `black_jail_pop`
4. The fourth variable is `white_jail_pop`
5. The fifth variable is `region`
Where does the region that you live in affect racial incarceration?
ave_blackpop_counties <- incarceration_df %>%
filter(year == max(year)) %>%
summarize(
average_black_pop = mean(black_pop_15to64)
) %>%
filter(average_black_pop == max(average_black_pop)) %>%
pull(average_black_pop)
ave_blackpop_counties <- incarceration_df %>%
filter(year == max(year)) %>%
summarize(
average_black_pop = mean(black_pop_15to64)
)
View(incarceration_df)
max_black_adm <- incarceration_df %>%
filter(black_jail_pop_rate == max(black_jail_pop_rate)) %>%
pull(black_jail_pop_rate)
max_black_adm <- incarceration_df %>%
filter(black_jail_pop_rate == max(black_jail_pop_rate), na.rm = TRUE) %>%
pull(black_jail_pop_rate)
max_black_adm <- incarceration_df %>%
filter(black_jail_pop_rate == max(black_jail_pop_rate), na.rm = TRUE) %>%
pull(black_jail_pop_rate)
max_black_adm <- incarceration_df %>%
filter(black_jail_pop_rate == max(black_jail_pop_rate), na.rm = TRUE)
View(max_black_adm)
max_black_adm <- incarceration_df %>%
filter(black_prison_adm == max(black_prison_adm), na.rm = TRUE) %>%
pull(black_jail_pop_rate)
max_black_adm <- incarceration_df %>%
filter(black_prison_adm == max(black_prison_adm), na.rm = TRUE) %>%
pull(black_prison_adm)
max_black_adm <- incarceration_df %>%
filter(black_prison_adm == max(black_prison_adm), na.rm = TRUE) %>%
pull(black_prison_adm)
max_black_adm <- incarceration_df %>%
filter(black_prison_adm == max(black_prison_adm), na.rm = TRUE)
ave_blackpop_counties <- incarceration_df %>%
filter(year == max(year)) %>%
summarize(
average_black_pop = mean(black_pop_15to64)
) %>%
filter(average_black_pop == max(average_black_pop)) %>%
pull(average_black_pop)
ave_whitepop_counties <- incarceration_df %>%
filter(year == max(year)) %>%
group_by(county_name) %>%
summarize(
average_white_pop = mean(white_pop_15to64)
) %>%
filter(average_white_pop == max(average_white_pop)) %>%
pull(average_white_pop)
ave_blackpop_counties <- incarceration_df %>%
summarize(
average_black_pop = mean(black_pop_15to64)
) %>%
filter(average_black_pop == max(average_black_pop)) %>%
pull(average_black_pop)
ave_blackpop_counties <- incarceration_df %>%
summarize(
average_black_pop = mean(black_pop_15to64, na.rm = TRUE)
) %>%
filter(average_black_pop == max(average_black_pop)) %>%
pull(average_black_pop)
ave_whitepop_counties <- incarceration_df %>%
filter(year == max(year)) %>%
summarize(
average_white_pop = mean(white_pop_15to64, na.rm = TRUE)
) %>%
filter(average_white_pop == max(average_white_pop)) %>%
pull(average_white_pop)
max_black_jail_pop <- pull(
filter(
incarceration_df,
black_jail_pop == max(black_jail_pop, na.rm = TRUE)
),
black_jail_pop
)
max_white_jail_pop <- pull(
filter(
incarceration_df,
white_jail_pop == max(white_jail_pop, na.rm = TRUE)
),
white_jail_pop
)
max_whitepop_counties <- incarceration_df %>%
filter(year == max(year)) %>%
filter(white_pop_15to64 == max(white_pop_15to64)) %>%
pull(white_pop_15to64)
max_whitepop_counties <- incarceration_df %>%
filter(year == max(year)) %>%
filter(white_pop_15to64 == max(white_pop_15to64), na.rm = TRUE) %>%
pull(white_pop_15to64)
max_blackpop <- incarceration_df %>%
filter(year == max(year)) %>%
filter(black_pop_15to64 == max(black_pop_15to64)) %>%
pull(black_pop_15to64)
max_whitepop <- incarceration_df %>%
filter(year == max(year)) %>%
filter(white_pop_15to64 == max(white_pop_15to64), na.rm = TRUE) %>%
pull(white_pop_15to64)
max_black_jail_pop <- incarceration_df %>%
filter(year == max(year)) %>%
pull(
filter(
black_jail_pop == max(black_jail_pop, na.rm = TRUE)
),
black_jail_pop
)
max_black_jail_pop <- incarceration_df %>%
filter(year == max(year)) %>%
filter(
black_jail_pop == max(black_jail_pop, na.rm = TRUE)
) %>%
pull(black_jail_pop)
max_white_jail_pop <- incarceration_df %>%
filter(year == max(year)) %>%
filter(
white_jail_pop == max(white_jail_pop, na.rm = TRUE)
) %>%
pull(white_jail_pop)
setwd("C:/Users/codyt/INFO 201/Final_Project_INFO_201")
shiny::runApp()
runApp()
setwd("C:/Users/codyt/INFO 201/Final_Project_INFO_201")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("C:/Users/codyt/INFO 201/Final_Project_INFO_201")
shiny::runApp()
education_df <- read.csv("states_all.csv")
View(education_df)
runApp()
runApp()
setwd("C:/Users/codyt/INFO 201/Final_Project_INFO_201")
shiny::runApp()
runApp()
runApp()
runApp()
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
class(states)
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
states <- read.csv("https://raw.githubusercontent.com/PublicaMundi/MappingAPI/master/data/geojson/us-states.json")
install.packages(tigris)
install.packages('tigris')
states <- states(cb=T)
library(tigris)
states <- states(cb=T)
runApp()
runApp()
View(states)
View(states)
shiny::runApp()
options(tigris_use_cache = TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
states <- states(cb=T)
states$NAME <- gsub(" ", "_", states$NAME)
map_df <- mutate(
states,
polyname = tolower(NAME)
)
View(states)
states <- states(cb=T)
states$NAME <- gsub(" ", "_", states$NAME)
states <- mutate(
states,
polyname = tolower(NAME)
)
runApp()
View(states)
View(states)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(year_score(2003))
year_score <- function(name){
map_education_df <- education_df %>%
filter(YEAR %in% name) %>%
group_by(STATE) %>%
summarize(
max_AVG_MATH_4_SCORE = max(AVG_MATH_4_SCORE, na.rm = TRUE)
) %>%
filter(!is.infinite(max_AVG_MATH_4_SCORE)) %>%
mutate(
polyname = tolower(STATE)
)
states <- states(cb=T)
states$NAME <- gsub(" ", "_", states$NAME)
states <- mutate(
states,
polyname = tolower(NAME)
)
merged_df <- geo_join(states, map_education_df, "STUSPS", "polyname")
pal <- colorNumeric("Blue", domain = merged_df$max_AVG_MATH_4_SCORE)
m <- leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
setView(-96, 37.8, 4) %>%
addPolygons(
data = merged_df,
fillColor = ~pal(merged_df$max_AVG_MATH_4_SCORE),
fillOpacity = 0.7,
weight = 0.2,
smoothFactor = 0.2
) %>%
addLegend(
pal = pal,
values = merged_df,
position = "bottomright",
title = "Average Math Score"
)
return(m)
}
View(year_score(2003))
runApp()
View(year_score(2003))
year_score <- function(name){
map_education_df <- education_df %>%
filter(YEAR %in% name) %>%
group_by(STATE) %>%
summarize(
max_AVG_MATH_4_SCORE = max(AVG_MATH_4_SCORE, na.rm = TRUE)
) %>%
filter(!is.infinite(max_AVG_MATH_4_SCORE)) %>%
mutate(
polyname = tolower(STATE)
)
View(year_score(2003))
View(year_score(2003))
View(year_score(2003))
year_score <- function(name){
map_education_df <- education_df %>%
filter(YEAR %in% name) %>%
group_by(STATE) %>%
summarize(
max_AVG_MATH_4_SCORE = max(AVG_MATH_4_SCORE, na.rm = TRUE)
) %>%
filter(!is.infinite(max_AVG_MATH_4_SCORE)) %>%
mutate(
polyname = tolower(STATE)
)
return(map_education_df)
View(year_score(2003))
year_score <- function(name){
map_education_df <- education_df %>%
filter(YEAR %in% name) %>%
group_by(STATE) %>%
summarize(
max_AVG_MATH_4_SCORE = max(AVG_MATH_4_SCORE, na.rm = TRUE)
) %>%
#filter(!is.infinite(max_AVG_MATH_4_SCORE)) %>%
mutate(
polyname = tolower(STATE)
)
year_score <- function(name){
map_education_df <- education_df %>%
filter(YEAR %in% name) %>%
group_by(STATE) %>%
summarize(
max_AVG_MATH_4_SCORE = max(AVG_MATH_4_SCORE, na.rm = TRUE)
) %>%
#filter(!is.infinite(max_AVG_MATH_4_SCORE)) %>%
mutate(
polyname = tolower(STATE)
)
View(year_score(2003))
View(year_score)
year_score <- function(name){
map_education_df <- education_df %>%
filter(YEAR %in% name) %>%
group_by(STATE) %>%
summarize(
max_AVG_MATH_4_SCORE = max(AVG_MATH_4_SCORE, na.rm = TRUE)
) %>%
#filter(!is.infinite(max_AVG_MATH_4_SCORE)) %>%
mutate(
polyname = tolower(STATE)
)
return(map_education_df)
year_score(2003)
}
year_score <- function(name){
map_education_df <- education_df %>%
filter(YEAR %in% name) %>%
group_by(STATE) %>%
summarize(
max_AVG_MATH_4_SCORE = max(AVG_MATH_4_SCORE, na.rm = TRUE)
) %>%
#filter(!is.infinite(max_AVG_MATH_4_SCORE)) %>%
mutate(
polyname = tolower(STATE)
)
return(map_education_df)
}
year_score(2003)
year_score <- function(name){
map_education_df <- education_df %>%
filter(YEAR %in% name) %>%
group_by(STATE) %>%
summarize(
max_AVG_MATH_4_SCORE = max(AVG_MATH_4_SCORE, na.rm = TRUE)
) %>%
#filter(!is.infinite(max_AVG_MATH_4_SCORE)) %>%
mutate(
polyname = tolower(STATE)
)
return(map_education_df)
}
test_df <- year_score(2003)
View(education_df)
setwd("C:/Users/codyt/INFO 201/Final_Project_INFO_201")
test_df <- year_score(2003)
year_score <- function(name){
map_education_df <- education_df %>%
filter(YEAR %in% name) %>%
group_by(STATE) %>%
summarize(
max_AVG_MATH_4_SCORE = max(AVG_MATH_4_SCORE, na.rm = TRUE)
) %>%
#filter(!is.infinite(max_AVG_MATH_4_SCORE)) %>%
mutate(
polyname = tolower(STATE)
)
return(map_education_df)
}
test_df <- year_score(2003)
setwd("C:/Users/codyt/INFO 201/Final_Project_INFO_201")
library(shiny)
library(dplyr)
library(tidyverse)
library(maps)
library(tigris)
library(leaflet)
year_score <- function(name){
map_education_df <- education_df %>%
filter(YEAR %in% name) %>%
group_by(STATE) %>%
summarize(
max_AVG_MATH_4_SCORE = max(AVG_MATH_4_SCORE, na.rm = TRUE)
) %>%
#filter(!is.infinite(max_AVG_MATH_4_SCORE)) %>%
mutate(
polyname = tolower(STATE)
)
return(map_education_df)
}
test_df <- year_score(2003)
View(test_df)
runApp()
runApp()
runApp()
runApp()
View(test_df)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(df)
runApp()
states <- maps.states
states <- map_data("state")
View(states)
states <- read.csv("csvData.csv")
View(states)
View(education_df)
View(states)
states <- read.csv("csvData.csv") %>%
mutate(STATES = toupper(State))
colnames(states)
education_df <- read.csv("states_all.csv")
states <- read.csv("csvData.csv") %>%
mutate(STATES = toupper(ï..State))
states <- read.csv("csvData.csv") %>%
mutate(STATE = toupper(ï..State))
map_education_df <- left_join(x = education_df, y = states, by = "STATE") %>%
select(YEAR, Code, avg_math = AVG_MATH_4_SCORE)
View(map_education_df)
runApp()
runApp()
runApp()
setwd("C:/Users/codyt/INFO 201/Final_Project_INFO_201")
runApp()
runApp()
states <- read.csv("csvData.csv") %>%
mutate(STATE = toupper(ï..State))
runApp()
shiny::runApp()
setwd("C:/Users/codyt/INFO 201/Final_Project_INFO_201")
runApp()
runApp()
runApp()
runApp()
states <- read.csv("csvData.csv")
View(states)
states <- read.csv("https://raw.githubusercontent.com/jasonong/List-of-US-States/master/states.csv")
View(states)
runApp()
map_education_df <- left_join(x = education_df, y = states, by = "STATE") %>%
select(YEAR, Abbreviation, avg_math = AVG_MATH_4_SCORE)
View(education_df)
map_education_df <- left_join(x = education_df, y = states, by = "STATE") %>%
select(YEAR, Abbreviation, avg_math = AVG_MATH_4_SCORE)
states <- read.csv("https://raw.githubusercontent.com/jasonong/List-of-US-States/master/states.csv") %>%
mutate(STATE = toupper(State))
map_education_df <- left_join(x = education_df, y = states, by = "STATE") %>%
select(YEAR, Abbreviation, avg_math = AVG_MATH_4_SCORE)
runApp()
View(map_education_df)
View(states)
states <- read.csv("https://raw.githubusercontent.com/jasonong/List-of-US-States/master/states.csv") %>%
mutate(STATE = toupper(State))
map_education_df <- left_join(x = education_df, y = states, by = "STATE") %>%
select(YEAR, Abbreviation, avg_math = AVG_MATH_4_SCORE)
education_graph <- plot_geo(
map_education_df,
locationmode = "USA-states",
frame = ~YEAR
) %>%
add_trace(
location = ~Abbreviation,
color = ~avg_math
)
runApp()
states <- read.csv("https://raw.githubusercontent.com/jasonong/List-of-US-States/master/states.csv") %>%
mutate(STATE = toupper(State))
map_education_df <- left_join(x = education_df, y = states, by = "STATE") %>%
select(YEAR, Abbreviation, avg_math = AVG_MATH_4_SCORE)
education_graph <- plot_geo(
map_education_df,
locationmode = 'USA-states',
frame = ~YEAR
) %>%
add_trace(
locations = ~Abbreviation,
color = ~avg_math
)
education_graph
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
